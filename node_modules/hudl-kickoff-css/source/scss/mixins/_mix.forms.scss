// --------------------------------------------
// --------------------------------------------
//
// Mixins :: Forms
//
// --------------------------------------------
// --------------------------------------------



@mixin input-default {
  width: 100%;
  border: $form-input-bdr;
  padding: $form-input-padding;
  background-color: $form-input-bg;
  box-shadow: $form-input-shadow;
  border-radius: $form-input-bdr-radius;
  color: $form-input-color;
  // transition: $form-item-trans;
  outline: $form-input-outline;
  -webkit-appearance: none;

  &:focus {
    outline: $form-input-outline-focus;
    border-color: $form-input-bdr-color-focus;
  }

  // Styling placeholder text
  &::-moz-placeholder { color: $form-input-color-placeholder; }
  &::-webkit-input-placeholder { color: $form-input-color-placeholder; }
  &::-ms-input-placeholder { color: $form-input-color-placeholder; }


  .#{$css-prefix}form--dark & {
    border: $form-dark-input-bdr;
    color: $form-dark-input-color;

    &:focus {
      outline: $form-dark-input-bdr-color-focus;
      border-color: $form-dark-input-bdr-color-focus;
    }

    &::-moz-placeholder { color: $form-dark-input-color-placeholder; }
    &::-webkit-input-placeholder { color: $form-dark-input-color-placeholder; }
    &::-ms-input-placeholder { color: $form-dark-input-color-placeholder; }
  }
}



// Custom Checkbox
// --------------------------------------------
@mixin custom-check($type, $target: $form-checkbox-target) {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  cursor: pointer;

  & + .#{$target} {
    position: relative;
    cursor: pointer;

    .#{$css-prefix}form--dark & {
      color: $form-dark-input-color;
    }
  }

  & + .#{$target}::before {
    position: relative;
    content: '\a0';
    margin-right: $spacer-small;
    width: $form-checkbox-size;
    height: $form-checkbox-size;
    display: inline-block;
    border: $form-input-bdr;
    border-radius: $form-input-bdr-radius;
    background-color: transparent;
    vertical-align: .2rem;
    text-indent: 1rem;
    line-height: 1;

    @if $type == radio {
      border-radius: 50%;
    }
  }

  // This sets up everything
  & + .#{$target}::after {
    position: absolute;
    left: 0.25rem;
    content: '';
    opacity: 0.01;
    transition: $form-item-trans;

    // Inserts a checkmark instead of a circle
    @if $type == check {
      top: 0.25rem;
      width: $form-checkbox-size - 0.5rem;
      height: $form-checkbox-size - 1rem;
      border-bottom: 0.25rem solid $form-checkbox-color-hover;
      border-left: 0.25rem solid $form-checkbox-color-hover;
      border-radius: $form-input-bdr-radius;
      transform: rotate(-45deg);
    } @else {
      // top: 0.1rem;
      top: 0.085em;
      width: $form-checkbox-size - 0.5rem;
      height: $form-checkbox-size - 0.5rem;
      background-color: $form-checkbox-color-hover;
      border-radius: 50%;
    }
  }

  // Hover state
  &:hover + .#{$target}::after { opacity: 1 }

  // Active state
  &:checked + .#{$target}::before {
    border-color: $form-checkbox-color-selected;

    .#{$css-prefix}form--dark & {
      border-color: $form-dark-checkbox-color-selected;
    }
  }

  &:checked + .#{$target}::after {
    opacity: 1;

    // Inserts a checkmark instead of a circle
    @if $type == check {
      border-color: $form-checkbox-color-selected;

      .#{$css-prefix}form--dark & {
        border-color: $form-dark-checkbox-color-selected;
      }
    } @else {
      background-color: $form-checkbox-color-selected;

      .#{$css-prefix}form--dark & {
        background-color: $form-dark-checkbox-color-selected;
      }
    }
  }
}





